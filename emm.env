# Environment file for emm_install.sh
# '#' starts a comment line, like Bash

# Core & Manage namespaces to deploy into
# -core is needed for OIDC registration
# -manage is the namespace/project EMM will deploy into
core_namespace=-core
manage_namespace=-core

# Names for EAR & Liberty builds/deployments
# DEFAULT_EMM_EAR is the name of the EAR build config/ImageStream
# DEFAULT_LIBERTY_EAR will affect the final route EMM can be reached on!
DEFAULT_EMM_EAR=emm-ear-
DEFAULT_LIBERTY_EAR=emm-liberty-

# Prefix to $apps_domain_name for the Certificate Common Name
# Replacing $manage_namespace when constructing app_host
# Used for the deployment to Projetech maximolab instances
#CERTIFICATE_COMMON_NAME_PREFIX=manage

# Deployment info
# If using InterPro's deploy system, `deploy_package` is the ezmaxmobile.zip file to pull from S3
# (This happens via the `ezmax-deploy` lambda script):
# https://github.com/InterPro-Solutions/lambda-scripts/tree/main/ezmax-deploy
# Subfolders can be used, i.e 'client/ezmaxmobile'
# Must begin with 'ezmaxmobile', with the default token
deploy_package=ezmaxmobile_.zip

# Bearer token to connect to S3 buckets
# InterPro: See the Lambda script documentation for how to generate this token
# https://github.com/InterPro-Solutions/lambda-scripts/blob/main/ezmax-deploy/README.md#signing
deploy_token=''

# Begin alternate emm.zip sources

# 1. If using another HTTP server, this is the URL to the ezmaxmobile.zip file
# Must end in ezmaxmobile.zip
#EMM_URL=http://example.com/ezmaxmobile.zip
# 2. Or, to use AWS authentication, <bucket>/<key>
#EMM_S3_RESOURCE=test-emm-deployments/ezmaxmobile.zip
# For 1 or 2, provide username & password
# For S3, this is the AWS Access Key ID & Secret, respectively
#DEPLOY_USER=
#DEPLOY_PASSWORD=
# Or, use an OpenShift secret (which must have `username` and `password` keys)
# (Should be in the Manage namespace)
#DEPLOY_SECRET=

# End alternate emm.zip sources

# Override route to deploy on
# This can be used to override the host EMM is deployed on
#app_host=$DEFAULT_LIBERTY_EAR-$manage_namespace.apps.ocp.example.com

# If set, pulls Dockerfile from Git using HTTPS instead of SSH
# (Some firewalls block outgoing SSH traffic)
GIT_HTTPS=1

# No maximo-all ear present / no -all server bundle deployed
# Signals that the EMM EAR build must include a prebuild step
# (This can also be autodetected by the script)
#BUILD_ALL_EAR=1

# For debugging/internal use
# If set, script will ask for environment file to use
# Rather than picking one in the same directory
ASK_ENV=1

# PersistentVolumeClaim for offline, if any
# A value of _ will discover the PVC from manage
#OFFLINE_PVC=_

# Any variable prefixed with EMM_PROP_
# will be copied to the final deployment
# The startup script `setenv.sh` will pick these up
# And convert them to JVM args
# Note: These are case-sensitive!
# MAXIMO_DB_URL != maximo_db_url
#EMM_PROP_=